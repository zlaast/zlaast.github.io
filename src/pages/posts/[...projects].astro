---
import { getCollection, type CollectionEntry } from 'astro:content'
import Base from '@layouts/base.astro'
import Postcard from '@components/postcard.astro'

// Dynamic URL Paths
export async function getStaticPaths() {
	const posts = await getCollection('posts')

	return posts.map((post) => ({
		params: { projects: post.data.project.toLowerCase().replaceAll(' ', '-') },
		props: post
	}))
}

type Props = CollectionEntry<'posts'>
const post = Astro.props

const posts = await getCollection('posts')
posts.sort((a, b) => Date.parse(a.data.date) - Date.parse(b.data.date))
---

<Base>
    <section class="flex flex-col bg-neutral-800 py-20 px-8">
        <div class="max-md:max-w-[400px] min-md:w-[800px] mx-auto">
           <!-- Breadcrumbs -->
            <div class="flex breadcrumbs text-[1rem]">            
                <a href="/">Home</a>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: grey;transform: ;msFilter:;"><path d="M10.707 17.707 16.414 12l-5.707-5.707-1.414 1.414L13.586 12l-4.293 4.293z"></path></svg>
                <a href=`/posts/${ post.data.project.toLowerCase().replaceAll(' ', '-') }`>{ post.data.project }</a>             
            </div>
            <h2 class="text-5xl text-emerald-400 my-10 font-kode">{ post.data.project }</span></h2>
				{
					posts.reverse().map((allPosts) => {
						if (allPosts.data.project == post.data.project) return <Postcard post={allPosts} />
					})
				}
        </div>
    </section>
</Base>

<style is:global>
.breadcrumbs {
	a {
		color: whitesmoke !important;
	}
}
</style>