---
export const partial = true;

// Variables
let menu : Object[] = [];
let project_progress = [
    {
        project: "Project Euler",
        progress: 3.5
    },
    {
        project: "nand2tetris",
        progress: 40
    }
]
// 1. Get all posts
// const all_posts = await Astro.glob("@content/posts/**/*.mdx");
const all_posts = Object.values(import.meta.glob("@content/posts/**/*.mdx", { eager: true }));

// 2. Get list of categories
let categories_set = new Set();
all_posts.forEach((post: any) => { categories_set.add(post.frontmatter.category) });

let categories_sorted = [...categories_set].sort();

// 3. Get projects per category
categories_sorted.forEach((category) => {

    let projects_list: String[] = [];
    all_posts.forEach((post: any) => {
        if (post.frontmatter.category == category)
            projects_list.push(post.frontmatter.project)
    });
    let projects_set = new Set(projects_list);

    interface Projects
    {
        Name?: String,
        PostsAmount?: Number,
        Progress?: Number
    }

    let projects: Projects[] = [];
    projects_set.forEach((project) => {
        projects.push({
            Name: project,
            PostsAmount: projects_list.filter(el => el == project).length,
            Progress: project_progress.find(proj => proj.project.toLowerCase() == project.toLowerCase())?.progress ?? 0
        });
    });

    menu.push({
        Category: category,
        projectsCount: new Set(projects).size,
        projects: projects
    });
});
---

<Fragment set:html={ JSON.stringify(menu) }></Fragment>